[{"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\index.js":"1","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\reportWebVitals.js":"2","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\container\\Policies.jsx":"3","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\PolicyTabs.jsx":"4","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\RuleBasedTab.jsx":"5","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\BehaviorBasedTab.jsx":"6","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\BehaviorBasedCardList.jsx":"7","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\PolicyData.js":"8","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\BehaviorBasedCard.jsx":"9","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\BehaviorBasedCardData.jsx":"10"},{"size":705,"mtime":1610652014015,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":1428,"mtime":1610651800138,"results":"14","hashOfConfig":"12"},{"size":1448,"mtime":1610532656192,"results":"15","hashOfConfig":"12"},{"size":140,"mtime":1610326499434,"results":"16","hashOfConfig":"12"},{"size":464,"mtime":1610592558923,"results":"17","hashOfConfig":"12"},{"size":1031,"mtime":1610596594397,"results":"18","hashOfConfig":"12"},{"size":1255,"mtime":1610652030896,"results":"19","hashOfConfig":"12"},{"size":3822,"mtime":1610651970496,"results":"20","hashOfConfig":"12"},{"size":111,"mtime":1610651638197,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"gk2uxd",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\index.js",[],["45","46"],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\reportWebVitals.js",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\container\\Policies.jsx",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\PolicyTabs.jsx",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\RuleBasedTab.jsx",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\BehaviorBasedTab.jsx",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\BehaviorBasedCardList.jsx",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\PolicyData.js",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\BehaviorBasedCard.jsx",["47","48","49","50","51","52"],"import React, { useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Typography} from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { red, yellow } from '@material-ui/core/colors';\r\nimport PersonOutline from '@material-ui/icons/PersonOutline';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { WrapText } from '@material-ui/icons';\r\nimport BehaviorBasedCardData from './BehaviorBasedCardData';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t  maxWidth: 345,\r\n\t},\r\n\theader: {\r\n\t\tdisableTypography: false,\r\n\t\t// variant: \"h6\",\r\n\t\theight: theme.typography.h6.fontSize,\r\n\t\twidth: theme.typography.h6.fontSize\r\n\t},\r\n\tavatar: {\r\n\t  backgroundColor: red[500],\r\n\t  height: theme.spacing(3),\r\n\t  width: theme.spacing(3),\r\n\t},\r\n\tWarningLevel: {\t\r\n\t\tColor: yellow[500],\r\n\t},\r\n\theaderIcons: {\r\n\t\tposition: \"relative\",\r\n        top: theme.spacing(2),\r\n        width: theme.typography.h6.fontSize,\r\n        height: theme.typography.h6.fontSize,\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tverticalAlign: theme.spacing(2),\r\n\t},\r\n  }));\r\n\r\nconst BehaviorBasedCard = ({ policy }) => {\r\n\tconsole.log(\"Policy\", policy);\r\n\tconst name = policy.name;\r\n\tconst description = policy.description;\r\n\tconst severity = policy.severity;\r\n\r\n\tconst classes = useStyles();\r\n\t\t\r\n\tconst [state, setState] = useState({\r\n\t\tcheckedA: true,\r\n\t\tcheckedB: true,\r\n\t});\r\n\r\n\tconst [showCardDetails, setShowCardDetails] = useState('true');\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetState({ ...state, [event.target.name]: event.target.checked});\r\n\t};\r\n\r\n\tconst onCardClicked = () => {\r\n\t\t\r\n\t\tconsole.log(\"In onCardClicked\", showCardDetails, policy);\r\n\t\tsetShowCardDetails({ showCardDetails: 'true'});\r\n        \r\n        console.log(\"In OnCardClicked after showCardData\", showCardDetails);\r\n\t\t// <BehaviorBasedCardData  policy={policy} showCardDetails={showCardDetails}/>;\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<BehaviorBasedCardData  policy={policy} showCardDetails={showCardDetails}/>;\r\n\t\t\t</div>\r\n\t\t);\r\n\t\t\r\n    };\r\n\r\n\tconst SeverityLabel = () => {\r\n\t\tif(severity === \"High\"){\r\n\t\t\tSeverityLabel = \"H\"\r\n\t\t} else if(severity === \"Medium\"){\r\n\t\t\tSeverityLabel = \"M\"\r\n\t\t} else {\r\n\t\t\tSeverityLabel = \"L\"\r\n\t\t}\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t<Card className={classes.root}>\r\n\t\t\t<CardActionArea onClick={onCardClicked}>\r\n\t\t\t\t<CardHeader className={classes.header}\r\n\t\t\t\t\tavatar={\r\n\t\t\t\t\t\t <PersonOutline />\r\n\t\t\t\t\t}\r\n\t\t\t\t\taction={\r\n\t\t\t\t\t\t// <IconButton>\r\n\t\t\t\t\t\t<div className={classes.headerIcons}>\r\n\t\t\t\t\t\t\t<Avatar aria-label=\"severity\" className={classes.avatar}>\r\n\t\t\t\t\t\t\t\tM\r\n\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t<WarningIcon />\r\n\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\tchecked={state.checkedB}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tname=\"checkedB\"\r\n\t\t\t\t\t\t\t\tinputProps={{ 'aria-label': 'primary checkbox' }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t// {/* </IconButton> */}\r\n\t\t\t\t\t}\r\n          \t\t\ttitle={name}\r\n      \t\t\t/>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Typography variant=\"inherit\" color=\"textSecondary\" component=\"p\">\r\n\t\t\t\t\t\t\t{description}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Divider></Divider>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Typography variant=\"caption\" color=\"textSecondary\" component = \"p\">\r\n\t\t\t\t\t\t\tApp\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"caption\" color=\"textSecondary\" component = \"p\">\r\n\t\t\t\t\t\t\tSome\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</CardActionArea>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default BehaviorBasedCard;","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\BehaviorBasedCardData.jsx",["53"],"import React from 'react';\r\n\r\nconst BehaviorBasedCardData = () => {\r\n\r\n}\r\nexport default BehaviorBasedCardData;",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":9,"column":8,"nodeType":"60","messageId":"61","endLine":9,"endColumn":18},{"ruleId":"58","severity":1,"message":"62","line":14,"column":10,"nodeType":"60","messageId":"61","endLine":14,"endColumn":18},{"ruleId":"63","severity":1,"message":"64","line":82,"column":4,"nodeType":"60","messageId":"65","endLine":82,"endColumn":17},{"ruleId":"63","severity":1,"message":"64","line":84,"column":4,"nodeType":"60","messageId":"65","endLine":84,"endColumn":17},{"ruleId":"63","severity":1,"message":"64","line":86,"column":4,"nodeType":"60","messageId":"65","endLine":86,"endColumn":17},{"ruleId":"58","severity":1,"message":"66","line":86,"column":4,"nodeType":"60","messageId":"61","endLine":86,"endColumn":17},{"ruleId":"58","severity":1,"message":"67","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":13},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'WrapText' is defined but never used.","no-const-assign","'SeverityLabel' is constant.","const","'SeverityLabel' is assigned a value but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]