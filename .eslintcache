[{"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\index.js":"1","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\reportWebVitals.js":"2","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\container\\Policies.jsx":"3","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\PolicyTabs.jsx":"4","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\RuleBasedTab.jsx":"5","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\BehaviorBasedTab.jsx":"6","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\BehaviorBasedCardList.jsx":"7","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\PolicyData.js":"8","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\BehaviorBasedCard.jsx":"9","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\BehaviorBasedCardData.jsx":"10","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\TabularBasedPolicyData.jsx":"11","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\BehaviorBasedCardTabularFormat.jsx":"12","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\SlidingPanelComponent.js":"13","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\reducers\\index.js":"14","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\reducers\\openPanelReducer.js":"15","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\actions\\index.js":"16","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\SeverityLabel.js":"17","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\SeverityList.js":"18","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\PolicyNameAndDescriptionHeader.js":"19"},{"size":997,"mtime":1611364758923,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":1611,"mtime":1611475793132,"results":"23","hashOfConfig":"21"},{"size":1760,"mtime":1611475862013,"results":"24","hashOfConfig":"21"},{"size":140,"mtime":1610326499434,"results":"25","hashOfConfig":"21"},{"size":599,"mtime":1611008615416,"results":"26","hashOfConfig":"21"},{"size":2148,"mtime":1611783943094,"results":"27","hashOfConfig":"21"},{"size":1253,"mtime":1611630579120,"results":"28","hashOfConfig":"21"},{"size":5934,"mtime":1611783818146,"results":"29","hashOfConfig":"21"},{"size":14263,"mtime":1611620566013,"results":"30","hashOfConfig":"21"},{"size":601,"mtime":1611475812966,"results":"31","hashOfConfig":"21"},{"size":4354,"mtime":1611724805475,"results":"32","hashOfConfig":"21"},{"size":3988,"mtime":1611722260024,"results":"33","hashOfConfig":"21"},{"size":204,"mtime":1611381284243,"results":"34","hashOfConfig":"21"},{"size":228,"mtime":1611391162791,"results":"35","hashOfConfig":"21"},{"size":223,"mtime":1611614055127,"results":"36","hashOfConfig":"21"},{"size":1082,"mtime":1611697848967,"results":"37","hashOfConfig":"21"},{"size":1604,"mtime":1611618918052,"results":"38","hashOfConfig":"21"},{"size":1449,"mtime":1611620167832,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"gk2uxd",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\index.js",[],["80","81"],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\reportWebVitals.js",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\container\\Policies.jsx",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\PolicyTabs.jsx",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\RuleBasedTab.jsx",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\BehaviorBasedTab.jsx",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\BehaviorBasedCardList.jsx",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\PolicyData.js",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\BehaviorBasedCard.jsx",["82","83","84","85","86","87","88","89","90","91"],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\BehaviorBasedCardData.jsx",["92"],"import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n// import AppBar from '@material-ui/core/AppBar';\r\n// import Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport './BehaviorCardDataFormProperties.css';\r\n// import { blueGrey, grey, red } from '@material-ui/core/colors';\r\nimport { useDispatch } from 'react-redux';\r\nimport { openPanel } from './../actions';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// import PersonOutline from '@material-ui/icons/PersonOutline';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import ButtonBase from '@material-ui/core/ButtonBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n// import Select from '@material-ui/core/Select';\r\n// import Avatar from '@material-ui/core/Avatar';\r\nimport SeverityList from './SeverityList';\r\nimport PolicyNameAndDescriptionHeader from './PolicyNameAndDescriptionHeader';\r\n\r\nconst styles = ((theme) => ({\r\n  title: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    top: theme.spacing(3),\r\n    backgroundColor: 'grey',\r\n  },\r\n  // AppBarHeader: {\r\n  //   backgroundColor: \"grey\",\r\n  //   color: \"black\",\r\n  //   boxShadow: \"0px 0px 0px 0px\",\r\n  //   variant: \"subtitle2\",\r\n  //   padding: '0px 0px 0px 0px',\r\n  // },\r\n  // title: {\r\n  //   fontSize: \"8\",\r\n  //   flexgrow: 1,\r\n  // },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: 'black',\r\n  },\r\n}));\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.title} {...other}>\r\n      <Typography variant=\"subtitle2\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 2,\r\n    flexDirection: 'column',\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      margin: '0',\r\n      width: 'fit-content',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      variant: 'body2',\r\n    },\r\n  }));\r\n\r\nexport default function BehaviorBasedCardData({ policy}) {\r\n\r\n    const classes = useStyles();\r\n\r\n    console.log(\"policy details in BehaviorBasedCardData is = \", policy);\r\n    \r\n    const name = policy.name;\r\n    const description = policy.description;\r\n    const severity = policy.severity;\r\n\r\n    console.log(\"In Behavior Based Card Data Policy Name = \", policy.name);\r\n    console.log(\"In Behavior Based Card Data Policy Description = \", policy.description)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClose = () => {\r\n      dispatch(openPanel());\r\n    }\r\n\r\n    const onSubmitData = () => {\r\n\r\n    }\r\n    \r\n    return (\r\n      <div>\r\n        <div>\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n            Configure Policy: {name}\r\n          </DialogTitle>\r\n        </div>\r\n        <div>\r\n          <DialogContent>\r\n            <div className={classes.root}>\r\n              <PolicyNameAndDescriptionHeader name={name} description={description} />\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"severity-label\" variant=\"inherit\">Severity</InputLabel>\r\n                <SeverityList severity={severity}/>\r\n              </FormControl>\r\n              <Typography variant='body2'>Additional Criteria</Typography>\r\n            </div>\r\n          </DialogContent>\r\n        </div>\r\n        <div>\r\n          <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Save\r\n              </Button>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Trash\r\n              </Button>\r\n          </DialogActions>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\n// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import AppBar from '@material-ui/core/AppBar';\r\n// import Toolbar from '@material-ui/core/Toolbar';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import Button from '@material-ui/core/Button';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     flexGrow: 1,\r\n//   },\r\n//   menuButton: {\r\n//     marginRight: theme.spacing(2),\r\n//   },\r\n//   title: {\r\n//     flexGrow: 1,\r\n//   },\r\n// }));\r\n\r\n// export default function ButtonAppBar() {\r\n//   const classes = useStyles();\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <AppBar position=\"static\">\r\n//         <Toolbar>\r\n//           <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n//             <MenuIcon />\r\n//           </IconButton>\r\n//           <Typography variant=\"h6\" className={classes.title}>\r\n//             News\r\n//           </Typography>\r\n//           <Button color=\"inherit\">Login</Button>\r\n//         </Toolbar>\r\n//       </AppBar>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n/* className={classes.root} */\r\n        /* <form className=\"form\" onSubmit={onSubmitData}> */\r\n          /* <AppBar position='sticky' className={classes.AppBarHeader} >\r\n            {/* <header className=\"Form-header\" variant='outlined'>\r\n                Configure Policy : {name}\r\n            </header>\r\n            <div>\r\n              <label>{name}</label>\r\n            </div>\r\n            <div>\r\n              <form>\r\n                <label>{description}</label>\r\n                \r\n              </form>\r\n            </div> */\r\n            /* <Toolbar>\r\n              <Typography variant=\"subtitle2\" className={classes.title}>\r\n                Configure Policy: {name}\r\n              </Typography>\r\n              <Button color=\"inherit\" position='right' onClick={handleClose}>X</Button>\r\n            </Toolbar>\r\n          </AppBar> */\r\n        /* </form> */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Code for Modal Dialog\r\n\r\n// function SimpleDialog(props) {\r\n  \r\n//   const { onClose, open } = props;\r\n\r\n//   const handleClose = () => {\r\n//     onClose();\r\n//   };\r\n\r\n//   return (\r\n//     <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n//       <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\r\n//       <div>\r\n//         <p>Hello World</p>\r\n//       </div>\r\n//     </Dialog>\r\n//   );\r\n// }\r\n\r\n// SimpleDialog.propTypes = {\r\n//   onClose: PropTypes.func.isRequired,\r\n//   open: PropTypes.bool.isRequired,\r\n// };\r\n\r\n// export default function BehaviorBasedCardData(props) {\r\n//   const data = props.open;\r\n//   console.log(\"In Data\", data);\r\n\r\n//   //Panel Code\r\n//   //const [openPanel, setOpenPanel] = useState(false);\r\n  \r\n//   // if (data === true){\r\n//   //   setOpenPanel(true);\r\n//   // }\r\n\r\n//   console.log(\"set Open Panel \", data);\r\n\r\n  \r\n//      if (data === true) {\r\n//        return(\r\n//         <div>          \r\n//            <SimplePanel open={data} close={false} />\r\n//         </div>\r\n//       );\r\n//      } else {\r\n//          return null;\r\n//      }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n//const [openPanel, setOpenPanel] = useState(false);\r\n  //console.log(\"Open Panel = \", openPanel);\r\n  //const [open, setOpen] = React.useState(false);\r\n\r\n  // function setPanelOpeningMode(event) {\r\n  //     setOpenPanel(event.target.value);\r\n  // }\r\n  \r\n  // const handleClickOpen = () => {\r\n  //    setOpen(true);\r\n  // // //   //open = true;\r\n  // };\r\n\r\n  // const handleClose = () => {\r\n  //   setOpen(false);\r\n  //   //open = false;\r\n  // };\r\n\r\n  // return (\r\n    // <div>\r\n    //   {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n    //     Open simple dialog\r\n    //   </Button> */}\r\n    //   <SimpleDialog  open={data} onClose={false} />\r\n    // </div>\r\n\r\n\r\n\r\n// import * as React from 'react';\r\n// import SlidingPanel from 'react-sliding-side-panel';\r\n// import './example.css';\r\n// import 'react-sliding-side-panel/lib/index.css';\r\n\r\n// const App = () => {\r\n//   const [openPanel, setOpenPanel] = React.useState(false);\r\n//   const [panelType, setPanelType] = React.useState('left');\r\n//   const [panelSize, setPanelSize] = React.useState(30);\r\n//   const [noBackdrop, setNoBackdrop] = React.useState(false);\r\n\r\n//   return (\r\n//     <div className=\"example-container\">\r\n//       <div className=\"form-container\">\r\n//         <h1>React Sliding Side Panel</h1>\r\n//         <div className=\"input-container\">\r\n//           <label htmlFor=\"width_input\">\r\n//             width (in %)\r\n//             <input\r\n//               id=\"width_input\"\r\n//               name=\"width_input\"\r\n//               type=\"number\"\r\n//               value={panelSize}\r\n//               onChange={({ target }) => setPanelSize(Number(target.value))}\r\n//             />\r\n//           </label>\r\n//         </div>\r\n//         <div className=\"input-container\">\r\n//           <label htmlFor=\"no_backdrop\">\r\n//             <input\r\n//               name=\"no_backdrop\"\r\n//               id=\"no_backdrop\"\r\n//               type=\"checkbox\"\r\n//               checked={noBackdrop}\r\n//               onChange={({ target }) => setNoBackdrop(target.checked)}\r\n//             />\r\n//             Hide backdrop\r\n//           </label>\r\n//         </div>\r\n//         <div className=\"input-container\">\r\n//           <button\r\n//             type=\"button\"\r\n//             onClick={() => {\r\n//               setPanelType('left');\r\n//               setOpenPanel(true);\r\n//             }}\r\n//           >\r\n//             Left\r\n//           </button>\r\n//           <button\r\n//             type=\"button\"\r\n//             onClick={() => {\r\n//               setPanelType('right');\r\n//               setOpenPanel(true);\r\n//             }}\r\n//           >\r\n//             Right\r\n//           </button>\r\n//           <button\r\n//             type=\"button\"\r\n//             onClick={() => {\r\n//               setPanelType('top');\r\n//               setOpenPanel(true);\r\n//             }}\r\n//           >\r\n//             Top\r\n//           </button>\r\n//           <button\r\n//             type=\"button\"\r\n//             onClick={() => {\r\n//               setPanelType('bottom');\r\n//               setOpenPanel(true);\r\n//             }}\r\n//           >\r\n//             Bottom\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//       <SlidingPanel\r\n//         type={panelType}\r\n//         isOpen={openPanel}\r\n//         backdropClicked={() => setOpenPanel(false)}\r\n//         size={panelSize}\r\n//         panelClassName=\"additional-class\"\r\n//         noBackdrop={noBackdrop}\r\n//       >\r\n//         <div className=\"panel-container\">\r\n//           <div>My Panel Content</div>\r\n//           <button type=\"button\" className=\"close-button\" onClick={() => setOpenPanel(false)}>\r\n//             close\r\n//           </button>\r\n//         </div>\r\n//       </SlidingPanel>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import ButtonBase from '@material-ui/core/ButtonBase';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     flexGrow: 1,\r\n//   },\r\n//   paper: {\r\n//     padding: theme.spacing(2),\r\n//     margin: 'auto',\r\n//     maxWidth: 500,\r\n//   },\r\n//   image: {\r\n//     width: 128,\r\n//     height: 128,\r\n//   },\r\n//   img: {\r\n//     margin: 'auto',\r\n//     display: 'block',\r\n//     maxWidth: '100%',\r\n//     maxHeight: '100%',\r\n//   },\r\n// }));\r\n\r\n// export default function ComplexGrid() {\r\n//   const classes = useStyles();\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <Paper className={classes.paper}>\r\n//         <Grid container spacing={2}>\r\n//           <Grid item>\r\n//             <ButtonBase className={classes.image}>\r\n//               <img className={classes.img} alt=\"complex\" src=\"/static/images/grid/complex.jpg\" />\r\n//             </ButtonBase>\r\n//           </Grid>\r\n//           <Grid item xs={12} sm container>\r\n//             <Grid item xs container direction=\"column\" spacing={2}>\r\n//               <Grid item xs>\r\n//                 <Typography gutterBottom variant=\"subtitle1\">\r\n//                   Standard license\r\n//                 </Typography>\r\n//                 <Typography variant=\"body2\" gutterBottom>\r\n//                   Full resolution 1920x1080 • JPEG\r\n//                 </Typography>\r\n//                 <Typography variant=\"body2\" color=\"textSecondary\">\r\n//                   ID: 1030114\r\n//                 </Typography>\r\n//               </Grid>\r\n//               <Grid item>\r\n//                 <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n//                   Remove\r\n//                 </Typography>\r\n//               </Grid>\r\n//             </Grid>\r\n//             <Grid item>\r\n//               <Typography variant=\"subtitle1\">$19.00</Typography>\r\n//             </Grid>\r\n//           </Grid>\r\n//         </Grid>\r\n//       </Paper>\r\n//     </div>\r\n//   );\r\n// }\r\n","C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\TabularBasedPolicyData.jsx",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\BehaviorBasedCardTabularFormat.jsx",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\SlidingPanelComponent.js",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\reducers\\index.js",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\reducers\\openPanelReducer.js",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\actions\\index.js",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\SeverityLabel.js",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\SeverityList.js",[],"C:\\Users\\manas\\Desktop\\Manasi\\MockUp\\mockup-policies\\src\\components\\PolicyNameAndDescriptionHeader.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"101","line":1,"column":38,"nodeType":"99","messageId":"100","endLine":1,"endColumn":47},{"ruleId":"97","severity":1,"message":"102","line":6,"column":8,"nodeType":"99","messageId":"100","endLine":6,"endColumn":22},{"ruleId":"97","severity":1,"message":"103","line":9,"column":10,"nodeType":"99","messageId":"100","endLine":9,"endColumn":13},{"ruleId":"97","severity":1,"message":"104","line":16,"column":8,"nodeType":"99","messageId":"100","endLine":16,"endColumn":14},{"ruleId":"97","severity":1,"message":"105","line":17,"column":10,"nodeType":"99","messageId":"100","endLine":17,"endColumn":21},{"ruleId":"97","severity":1,"message":"106","line":18,"column":10,"nodeType":"99","messageId":"100","endLine":18,"endColumn":19},{"ruleId":"97","severity":1,"message":"107","line":20,"column":8,"nodeType":"99","messageId":"100","endLine":20,"endColumn":29},{"ruleId":"97","severity":1,"message":"108","line":74,"column":16,"nodeType":"99","messageId":"100","endLine":74,"endColumn":26},{"ruleId":"97","severity":1,"message":"109","line":74,"column":28,"nodeType":"99","messageId":"100","endLine":74,"endColumn":41},{"ruleId":"97","severity":1,"message":"110","line":120,"column":11,"nodeType":"99","messageId":"100","endLine":120,"endColumn":23},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'CardActionArea' is defined but never used.","'red' is defined but never used.","'Button' is defined but never used.","'useDispatch' is defined but never used.","'openPanel' is defined but never used.","'SlidingPanelComponent' is defined but never used.","'policyName' is assigned a value but never used.","'setPolicyName' is assigned a value but never used.","'onSubmitData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]